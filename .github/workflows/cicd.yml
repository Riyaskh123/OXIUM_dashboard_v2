name: Deploy GOEC_dashboard to AWS Lightsail

on:
  push:
    paths:
      - "**/*"
      - ".github/workflows/cicd.yml"
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    name: Build & Deploy React App
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js (match your version, e.g. 18)
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      # Step 3: Install dependencies and build React app
      - name: Install Dependencies & Build
        run: |
          npm ci
          CI=false npm run build
          echo "‚úÖ Build completed successfully"
          ls -la build/

      # Step 4: Verify SSH connectivity and test connection
      - name: Verify SSH connection to Lightsail
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.LIGHTSAIL_HOST }}
          username: ${{ secrets.LIGHTSAIL_USER }}
          key: ${{ secrets.LIGHTSAIL_KEY }}
          script: |
            echo "‚úÖ SSH connection OK"
            echo "Current user: $(whoami)"
            echo "Current directory: $(pwd)"
            echo "Available disk space:"
            df -h
            echo "Nginx status:"
            sudo systemctl status nginx --no-pager || echo "Nginx not running"

      # Step 5: Clean temp deploy folder on Lightsail
      - name: Prepare remote temp dir
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.LIGHTSAIL_HOST }}
          username: ${{ secrets.LIGHTSAIL_USER }}
          key: ${{ secrets.LIGHTSAIL_KEY }}
          script: |
            echo "üßπ Cleaning up previous deployment..."
            rm -rf ~/deploy-temp
            mkdir -p ~/deploy-temp
            echo "‚úÖ Temp directory prepared"

      # Step 6: Rsync build output to Lightsail
      - name: Upload build to Lightsail
        uses: burnett01/rsync-deployments@5.2.1
        with:
          switches: -avzr --delete
          path: build/
          remote_path: ~/deploy-temp/
          remote_host: ${{ secrets.LIGHTSAIL_HOST }}
          remote_user: ${{ secrets.LIGHTSAIL_USER }}
          remote_key: ${{ secrets.LIGHTSAIL_KEY }}

      # Step 7: Move build to web root, restart Nginx
      - name: Deploy & Restart Nginx
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.LIGHTSAIL_HOST }}
          username: ${{ secrets.LIGHTSAIL_USER }}
          key: ${{ secrets.LIGHTSAIL_KEY }}
          script: |
            echo "üöÄ Starting deployment..."

            # Backup existing deployment
            if [ -d "/var/www/html/goec-dashboard" ]; then
              echo "üì¶ Backing up existing deployment..."
              sudo cp -R /var/www/html/goec-dashboard /var/www/html/goec-dashboard.backup.$(date +%Y%m%d_%H%M%S)
            fi

            # Remove old deployment
            echo "üóëÔ∏è Removing old deployment..."
            sudo rm -rf /var/www/html/goec-dashboard

            # Create new directory
            echo "üìÅ Creating deployment directory..."
            sudo mkdir -p /var/www/html/goec-dashboard

            # Copy new build
            echo "üìã Copying new build..."
            sudo cp -R ~/deploy-temp/* /var/www/html/goec-dashboard/

            # Set permissions
            echo "üîê Setting permissions..."
            sudo chown -R www-data:www-data /var/www/html/goec-dashboard
            sudo chmod -R 755 /var/www/html/goec-dashboard

            # Clean up temp files
            echo "üßπ Cleaning up temp files..."
            rm -rf ~/deploy-temp

            # Test nginx configuration
            echo "üîç Testing nginx configuration..."
            sudo nginx -t

            # Restart nginx
            echo "‚ôªÔ∏è Restarting Nginx..."
            sudo systemctl restart nginx

            # Verify nginx is running
            echo "‚úÖ Checking nginx status..."
            sudo systemctl status nginx --no-pager

            echo "üéâ Deployment completed successfully!"
            echo "üåê Your app should be available at: http://${{ secrets.LIGHTSAIL_HOST }}"
